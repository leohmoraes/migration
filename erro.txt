migration users:
class CreateUsersTable extends Migration
{
    public function up()
    {
        Schema::create('users', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name');
            $table->string('email', 100)->unique();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });
    }

    public function down()
    {
        Schema::dropIfExists('users');
    }
}

migration password_resets:
class CreatePasswordResetsTable extends Migration
{

    public function up()
    {
        Schema::create('password_resets', function (Blueprint $table) {
             /*
              The limit for UTF8 is 767/3 = 255 characters, for UTF8mb4 which uses 4 bytes per character it is 767/4 = 191 characters. 
              */
            $table->string('email', 100)->index(); //max 191
            $table->string('token');
            $table->timestamp('created_at')->nullable();
        });
    }

    public function down()
    {
        Schema::dropIfExists('password_resets');
    }
}

migration categories:
class CreateCategoriesTable extends Migration
{
    public function up()
    {
        Schema::create('categories', function (Blueprint $table) {
            $table->increments('id');
            $table->string('name');
        });
    }

    public function down()
    {
        Schema::dropIfExists('categories');
    }
}

migration products:
class CreateProductsTable extends Migration
{
    public function up()
    {
        Schema::create('products', function (Blueprint $table) {
            $table->increments('id');// Id da tabela (chave primária e incremento)
            $table->integer('category_id')->unsigned();// Id da tabela categories
            $table->foreign('category_id')->references('id')->on('categories'); // Define o campo como chave extrangeira
            $table->string('name', 100)->unique(); // Nome do Produto
            $table->string('image', 100)->nullable(); // Imagem do Produto
            $table->text('description')->nullable(); // Descrição do produto
            $table->timestamps();
        });
    }
    public function down()
    {
        Schema::dropIfExists('products');
    }
}
